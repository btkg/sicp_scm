(define (square-list items)
    (if (null? items)
        ()
        (cons 
            (let ((g (car items)))
                (* g g)
            )
            (square-list (cdr items))
        )
    )
)
; (define (square-list items)
;     (map (lambda (x) (* x x) ) items)
; )

(square-list (list 1 2 3 4))
